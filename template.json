{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS Snapshot Cleanup",
  "Parameters": {
    "LambdaS3Bucket": {
      "Type": "String",
      "Description": "Bucket where the Lambda code is located"
    },
    "LambdaS3Key": {
      "Type": "String",
      "Description": "Path to Lambda code",
      "Default": "lambda.zip"
    },
    "LambdaS3ObjectVersion": {
      "Type": "String",
      "Description": "Leave blank if you don't have versioning enabled on LambdaS3Bucket"
    },
    "AlarmTopicParameter": {
      "Description": "SNS topic to send CloudWatch alarms",
      "Type": "String"
    }
  },
  "Conditions": {
    "VersioningEnabled": {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "LambdaS3ObjectVersion"}, ""]}]}
  },
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                 "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        }, {
          "PolicyName": "ec2",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Sid": "Stmt1424083772000",
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeSnapshots",
                "ec2:DeleteSnapshot"
              ],
              "Resource": [
                "*"
              ]
            }]
          }
        }]
      }
    },
    "Lambda": {
      "Type" : "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "LambdaS3Bucket"},
          "S3Key": {"Ref": "LambdaS3Key"},
          "S3ObjectVersion": {"Fn::If": ["VersioningEnabled", {"Ref": "LambdaS3ObjectVersion"}, {"Ref": "AWS::NoValue"}]}
        },
        "Description": "AWS Snapshot Cleanup",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs",
        "Timeout": 60
      }
    },
    "LambdaErrorsAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if executions fail",
        "Namespace": "AWS/Lambda",
        "MetricName": "Errors",
        "Dimensions": [{
          "Name": "FunctionName",
          "Value": {"Ref": "Lambda"}
        }],
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{"Ref": "AlarmTopicParameter"}]
      }
    },
    "LambdaThrottlesAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if executions are throttled",
        "Namespace": "AWS/Lambda",
        "MetricName": "Throttles",
        "Dimensions": [{
          "Name": "FunctionName",
          "Value": {"Ref": "Lambda"}
        }],
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{"Ref": "AlarmTopicParameter"}]
      }
    }
  }
}
